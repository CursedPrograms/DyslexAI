Shader "Custom/LearningShader"
{
    Properties
    {
        _MainTex ("Texture", 2D) = "white" { }
        _TensorFlowOutput ("TensorFlow Output", 2D) = "white" { }
        _Strength ("Effect Strength", Range(0, 1)) = 0.5
    }

    SubShader
    {
        Tags { "Queue"="Overlay" }
        LOD 100

        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"

            struct appdata
            {
                float4 vertex : POSITION;
                float3 normal : NORMAL;
            };

            struct v2f
            {
                float4 pos : POSITION;
                float4 color : COLOR;
            };

            sampler2D _MainTex;
            sampler2D _TensorFlowOutput;
            float _Strength;

            v2f vert(appdata v)
            {
                v2f o;
                o.pos = UnityObjectToClipPos(v.vertex);
                o.color = tex2D(_MainTex, v.vertex.xy * 0.1);  // Use UVs or any other logic as needed
                return o;
            }

            fixed4 frag(v2f i) : COLOR
            {
                fixed4 col = tex2D(_MainTex, i.pos.xy);
                fixed4 tfOutput = tex2D(_TensorFlowOutput, i.pos.xy);  // Assuming TensorFlow output is a texture

                // Use TensorFlow output to modify the color
                col.rgb *= (1.0 - _Strength) + _Strength * tfOutput.rgb;

                return col;
            }
            ENDCG
        }
    }
}
